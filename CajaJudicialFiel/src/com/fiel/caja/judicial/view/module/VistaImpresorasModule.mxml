<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx"
		   paddingBottom="5" paddingLeft="5"
		   paddingRight="5" paddingTop="5"
		   initialize="module1_initializeHandler(event)"
		   creationComplete="panel_creationCompleteHandler(event)"
		   maxHeight="400" minWidth="5" verticalScrollPolicy="on">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.fiel.caja.judicial.business.ConstantesEstados;
			import com.fiel.caja.judicial.event.ImpresorasEvent;
			import com.fiel.caja.judicial.model.CajaJudicialModelLocator;
			import com.fiel.caja.judicial.view.component.impresora.VistaImpresoraItem;
			import com.tarjetafiel.caja.vo.Impresora;
			import com.tarjetafiel.proveedorconexion.vo.SetDataVo;
			
			import flash.utils.getDefinitionByName;
			import flash.utils.getQualifiedClassName;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.StateChangeEvent;
			import mx.managers.PopUpManager;
			import mx.utils.StringUtil;
			
			import spark.components.Panel;
			
			import utils.ManejadorMensajes;
			import utils.ManejadorPantallas;
			
			[Bindable]
			private var modelo:CajaJudicialModelLocator = CajaJudicialModelLocator.getInstance();
			
			protected function panel_creationCompleteHandler(event:FlexEvent):void
			{
				refrescarListaImpresoras();
			}
			
			private function refrescarListaImpresoras():void
			{
				//parent.title=StringUtil.substitute('Impresoras - Predeterminada {0}',modelo.cajaApertura.caja.impresora.descripcion);
				tlImpresoras.removeAllElements();
				if (modelo.arrImpresoras != null)
				{
					for each (var impresora:Impresora in modelo.arrImpresoras)
					{
						var printerItem:VistaImpresoraItem = new VistaImpresoraItem();
						printerItem.impresora = impresora;
						printerItem.refresh();
						tlImpresoras.addElement(printerItem);
					}
				}
				
				changeParentTitle(parent);
				/* if (parent.parent.parent.hasOwnProperty("title"))
				{
				//var className:String = getQualifiedClassName(parent);
				var classI:Class = getQualifiedClassName(parent) as Class
				classI(parent).title = StringUtil.substitute("Impresoras - Predeterminada {0}", modelo.cajaApertura.caja.impresora.descripcion);
				} */
				//PopUpManager.centerPopUp(this);
			}
			
			private function changeParentTitle(parent:Object):void
			{
				if (parent != null)
				{
					if (parent.hasOwnProperty("title"))
					{
						var classI:Class = getDefinitionByName(getQualifiedClassName(parent)) as Class
						var arr:Array = String(classI(parent).title).split(" - ");
						classI(parent).title = arr[0] + StringUtil.substitute(" - Predeterminada {0}:{1}", modelo.cajaApertura.caja.impresora.descripcion,
							modelo.cajaApertura.caja.impresora.path);
						return;
					}
					else
					{
						if (parent.parent != null)
						{
							changeParentTitle(parent.parent);
						}
						else
						{
							return;
						}
					}
				}
			}
			
			private function closePopUp():void
			{
				ManejadorPantallas.cerrarPop(this);
				new SetDataVo(modelo, "estadoActualApp", ConstantesEstados.ESTADO_AUTORIZADO).guardarValor();
				this.invalidateDisplayList();
				this.validateNow();
			}
			
			
			protected function refrescarStt_enterStateHandler(event:FlexEvent):void
			{
				refrescarListaImpresoras();
				//new SetDataVo(modelo, "estadoActualVImpresoras", ConstantesEstados.ESTADO_VI_IMPRESORAS).guardarValor();
			}
			
			private function set refreshComponent(value:Boolean):void
			{
				refrescarListaImpresoras();
			}
			
			
			protected function module1_initializeHandler(event:FlexEvent):void
			{
				new ImpresorasEvent(ImpresorasEvent.LISTAR).dispatch();
			}
			
		]]>
	</fx:Script>
	<fx:Binding source="modelo.cajaApertura.caja.impresora.idImpresora" destination="refreshComponent"/>
	
	<!--<s:states>
	<s:State name="Impresoras" id="impresorasStt"/>
	<s:State name="RefrescarLista" id="refrescarStt" enterState="refrescarStt_enterStateHandler(event)"/>
	</s:states>-->
	<s:Group>
		<s:VGroup width="100%" height="100%" >
			<s:Scroller id="contentScroller" width="100%" height="100%" horizontalScrollPolicy="off">
				<s:TileGroup id="tlImpresoras" horizontalGap="2" verticalGap="2" 
							 orientation="rows" requestedColumnCount="5"
							 minWidth="5" minHeight="5" horizontalAlign="center"
							 clipAndEnableScrolling="true">
				</s:TileGroup>
			</s:Scroller>
		</s:VGroup>
	</s:Group>
	
</mx:Module>
