<?xml version="1.0" encoding="utf-8"?>
<mx:VBox   xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"    
	horizontalAlign="center" verticalAlign="top" backgroundAlpha="0.0" borderColor="#B7BABC">
        
        <mx:HBox includeInLayout="false" visible="false">
           <mx:Label text="Saldo a la fecha: " fontWeight="bold" styleName="lblInfoBlanco"/>
           <mx:Label includeInLayout="{!ctaCteComercioModel.verSaldoHistorio}" visible="{!ctaCteComercioModel.verSaldoHistorio}" text="{currencyFormatter.format(ctaCteComercioModel.saldoAnterior)}" fontWeight="bold" styleName="lblInfoBlanco"/>	
           <mx:Label includeInLayout="{ctaCteComercioModel.verSaldoHistorio}" visible="{ctaCteComercioModel.verSaldoHistorio}" text="Consulte Histórico" fontWeight="bold" styleName="lblInfoBlanco"/>
        </mx:HBox>
        
        
       	<mx:AdvancedDataGrid id="adg1" sortableColumns="false" designViewDataType="flat" keyDown="pressKey(event)"  
       		doubleClickEnabled="true" width="100%" height="100%"   doubleClick="this.cambiarVistaDetalle()"  
       		dataProvider="{ctaCteComercioModel.arrayMovientosCtaCteResumen}">
		<mx:columns>
			<mx:AdvancedDataGridColumn headerText="Sucursal">
				<mx:itemRenderer>
					<mx:Component>
						<mx:Label text="{data.descripcionSucursal}"/>
					</mx:Component>
				</mx:itemRenderer>
			</mx:AdvancedDataGridColumn>				
			<mx:AdvancedDataGridColumn headerText="Fecha Transacción" dataField="timestamp" formatter="{dateFormatter}"/>
			<mx:AdvancedDataGridColumn headerText="Transacción" dataField="idTransaccion" />
			<mx:AdvancedDataGridColumn headerText="Fecha Facturación" dataField="fechaFacturacion" formatter="{dateFormatter}"/>
			<mx:AdvancedDataGridColumn headerText="Liquidación" labelFunction="labelFunctionIdLiquidacion"/>
			
			<mx:AdvancedDataGridColumn headerText="Concepto" >
				<mx:itemRenderer>
					<mx:Component>
						<mx:Label text="{outerDocument.getDescripcionConcepto(data)}"/>
					</mx:Component>
				</mx:itemRenderer>
			</mx:AdvancedDataGridColumn>
			
			<mx:AdvancedDataGridColumn headerText="Debe" styleFunction="styleFunctionDebe">
                 <mx:itemRenderer>
		         <mx:Component>
			          <mx:Label text="{outerDocument.getDebe(data)}"/>
		         </mx:Component>
             	</mx:itemRenderer>
            </mx:AdvancedDataGridColumn>
            <mx:AdvancedDataGridColumn headerText="Haber" styleFunction="styleFunctionHaber">
                 <mx:itemRenderer>
		         <mx:Component>
			          <mx:Label text="{outerDocument.getHaber(data)}"/>
		         </mx:Component>
             	</mx:itemRenderer>
            </mx:AdvancedDataGridColumn>
            <mx:AdvancedDataGridColumn headerText="Saldo" >
                 <mx:itemRenderer>
		         <mx:Component>
			         <mx:Label text="{outerDocument.currencyFormatter.format(data.saldo)} "/>
		         </mx:Component>
             	</mx:itemRenderer>
            </mx:AdvancedDataGridColumn>
            <!--			            
            <mx:AdvancedDataGridColumn headerText="Saldo Acumulado" >
                 <mx:itemRenderer>
		         <mx:Component>
			         <mx:Label text="{outerDocument.getSaldoAcumulado(data)}"/>
		         </mx:Component>
             	</mx:itemRenderer>
            </mx:AdvancedDataGridColumn>
			
			<mx:AdvancedDataGridColumn headerText="Debe"  formatter="{currencyFormatter}" styleFunction="styleFunctionDebe" labelFunction="labelFunctionDebe"/>
			<mx:AdvancedDataGridColumn headerText="Haber" formatter="{currencyFormatter}" styleFunction="styleFunctionHaber" labelFunction="labelFunctionHaber"/>
			<mx:AdvancedDataGridColumn headerText="Saldo" formatter="{currencyFormatter}" dataField="saldo" itemRenderer="views.categorias.comercio.renderers.SaldoRenderer"/>
			-->
		</mx:columns>
	</mx:AdvancedDataGrid>

		
	
	<mx:DateFormatter id="dateFormatter" formatString="DD/MM/YYYY"/>
	<mx:CurrencyFormatter  id="currencyFormatter" currencySymbol="$"  rounding="nearest" precision="2" />  
    
    <!--
    <mx:Binding source="rdbFacturacion.selected" destination="ctaCteComercioModel.ordenarPorFacturacion"/>
	-->
<mx:Script>
	<![CDATA[
		import mx.effects.easing.Back;
		import com.tarjetafiel.caja.vo.MovimientoCtaCteComercio;
		import com.tarjetafiel.caja.vo.MovimientoCtaCte;
		import mx.controls.Alert;
		import views.categorias.comercio.models.CtaCteComercioModel;
		
		
		     [Bindable]public var ctaCteComercioModel:CtaCteComercioModel;
		     public var primero: Boolean=true; 
		     public var acumulado:  Number=0;
		     
		     public  function cambiarVistaDetalle():void{
		     	if(adg1.selectedItem){
		     		var movim : MovimientoCtaCteComercio = MovimientoCtaCteComercio(adg1.selectedItem);
		     		ctaCteComercioModel.movimientoCtaCteSeleccionado = movim;
		     		ctaCteComercioModel.dispatcher.dispatchEvent(new Event("cambiarAVistaDetalleCtaCte")); 
		     		
		     	}	
		     }
		     	
       public function myStyleFunction(data:Object, col: AdvancedDataGridColumn):Object
       {
           if(data["codigoConcepto"] =='3')
           {
               return {background: true,color:'green',fontWeight:"bold",backgroundColor:"red"};
           }  else 
             if(data["codigoConcepto"] =='4')  return {background: true,color:'#8539ED',fontWeight:"bold",backgroundColor:"red"};
           return {color:'blue',fontWeight:"bold"  };
       } 
       
       	public function getDescripcionConcepto(data:Object):String{
				var ctacte:MovimientoCtaCteComercio = data as MovimientoCtaCteComercio;
			  if(ctacte.idConcepto==190)
			  {
			  	 return "Pago Fiel";
			  }
			  else
			  {
			  	 return ctacte.descripcionConcepto;
			  }
		}
        public function getDebe(data:Object):String{
				var ctacte:MovimientoCtaCteComercio = data as MovimientoCtaCteComercio;
			  return (isNaN(ctacte.debe))? "": currencyFormatter.format(ctacte.debe);
		}
		 public function getHaber(data:Object):String{
				var ctacte:MovimientoCtaCteComercio = data as MovimientoCtaCteComercio;
			  return (isNaN(ctacte.haber))? "":currencyFormatter.format(ctacte.haber);
		}   
		 public function getSaldoAcumulado(data:Object):String{
			var ctacte:MovimientoCtaCteComercio = data as MovimientoCtaCteComercio;
			var saldo:  Number=0;
			if(ctacte.estadoImpacto!='R')
			{
				saldo = ctacte.debe - ctacte.haber;
		 	}
		 	return (isNaN(saldo))? "":currencyFormatter.format(saldo);
		}         
           
		private function pressKey(event:KeyboardEvent):void{
			if(event.keyCode == Keyboard.ENTER){
				if(adg1.selectedItem != null){
					this.cambiarVistaDetalle();
				}
			}
		}
		
		public function setFocusGrilla():void{
			if(this.adg1){
				this.adg1.setFocus();
			}
		} 
		
		
		
		
			//Liquiedacion Comercio.
			public function labelFunctionIdLiquidacion(data:Object,column:AdvancedDataGridColumn):String{
				if(!isNaN(data.idLiquidacion) && data.idLiquidacion.toString().length>0){
					return data.idLiquidacion.toString();
				}
				return data.estadoImpacto;
			}
			
			
			public function labelFunctionDebe(data:Object,column:AdvancedDataGridColumn):String{
				if(data.signo == -1){
					return data.importe.toString();
				}
				
				return "0"; 
			}
			
			public function labelFunctionHaber(data:Object,column:AdvancedDataGridColumn):String{
				if(data.signo == 1){
					return data.importe.toString();
				}
				
				return "0"; 
			}
			
			public function styleFunctionDebe(data:Object, column:AdvancedDataGridColumn):Object{
				var obj:Object = { color:"#DD0015",
								   fontWeight:"bold",
								   fontSize:14	
								 };
				return obj;
			}
			
			public function styleFunctionHaber(data:Object, column:AdvancedDataGridColumn):Object{
				var obj:Object = { color:"#198600",
								   fontWeight:"bold",
								   fontSize:14	
								 };
				return obj;
			}
	]]>
</mx:Script>

	
</mx:VBox>
