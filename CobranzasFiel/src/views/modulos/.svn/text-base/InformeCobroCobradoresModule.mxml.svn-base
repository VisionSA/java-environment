<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" 
	layout="vertical" 
	width="100%" 
	height="100%" horizontalAlign="center"
	creationComplete="init()">
	
	<mx:Script>
		<![CDATA[
			import com.tarjetafiel.caja.vo.Cobrador;
			import events.GenericTareasPendientesEvent;
			import model.CobranzasModelLocator;
			import events.GenericAsignacionCobradoresEvent;
			import mx.utils.ObjectUtil;
			import mx.controls.Alert;
			import com.util.components.alert.AlertError;
		
		
			[Bindable]
			private var modelo : CobranzasModelLocator = CobranzasModelLocator.getInstance();
		
		
			private function init() : void {
				if (modelo.listaCobradoresCambio == null){
					new GenericTareasPendientesEvent(GenericTareasPendientesEvent.BUSCAR_COBRADORES_PARA_CAMBIO_EVENT,null).dispatch();	
				}	
			}
			
			private function datosCobradores(obj : Object) : String {
				if (obj.idCobrador == -1){
					return obj.apellido;	
				}else {
					return obj.apellido + ", " + obj.nombre;	
				}
				
			}
			
		
			private function ambasFechasIngresadas(fechaDesde:String,fechaHasta:String): Boolean {
				return (fechaDesde!="" && fechaHasta!="");
			}
			
			private function ningunaFechaIngresada(fechaDesde:String,fechaHasta:String): Boolean {
				return (fechaDesde=="" && fechaHasta=="");
			}
		
			private function rangoFechaValido(fechaDesde:Date,fechaHasta:Date):Boolean{
				var isOk : Boolean = false;
				
				if (fechaDesde<=fechaHasta){
					isOk = true;
				}
				
				return isOk;
								
			}
		
		
		
			private function buscarTareas():void {
				
				if (ambasFechasIngresadas(dfDesde.text,dfHasta.text)){
					var obj : Object = new Object();
					obj.fechaDesde = DateField.stringToDate(dfDesde.text,"DD/MM/YYYY");
					obj.fechaHasta = DateField.stringToDate(dfHasta.text,"DD/MM/YYYY");
					if (obj.fechaDesde == null || obj.fechaHasta == null){
						AlertError.show("El formato de las fechas\ningresadas es incorrecto");
					}else if (rangoFechaValido(obj.fechaDesde as Date,obj.fechaHasta as Date)){
						var cob : Cobrador = modelo.listaCobradoresCambio.getItemAt(cboCobradores.selectedIndex) as Cobrador;
						if (cob.idCobrador != -1){
							obj.cobrador = cob;	
						}else {
							obj.cobrador = null;
						}
									
						new GenericAsignacionCobradoresEvent(GenericAsignacionCobradoresEvent.GENERAR_COBROS_COBRADORES_EVENT,obj).dispatch();
					}else {
						AlertError.show("El rango de fechas\ningresadas es incorrecto");
					}
				}else {
					if (ningunaFechaIngresada(dfDesde.text,dfHasta.text)){						
						AlertError.show("El rango de fechas\debe ser ingresado");
					}else { /* Solo ingreso un valor en el rango de fechas */
						AlertError.show("El rango de fechas\ningresadas es incorrecto");
					}
				}
			}
		]]>
	</mx:Script>
	
	
	<mx:DateFormatter id="df" formatString="DD/MM/YYYY"/>
	
	<mx:Canvas id="canvasFiltro" width="600" borderStyle="solid" borderThickness="2" borderColor="0">
		<mx:VBox width="100%" horizontalAlign="center">
			<mx:Label text="Filtro de BÃºsqueda" fontSize="18" fontWeight="bold"/>
			<mx:Form id="formFiltro" width="100%" >
				<mx:FormItem label="Fecha" >
					<mx:HBox width="100%">
						<mx:VBox height="100%" horizontalAlign="center">					
							<mx:Label text="Desde"/>
							<mx:DateField id="dfDesde" width="120" formatString="DD/MM/YYYY" editable="true"/>
						</mx:VBox>
						<mx:VBox height="100%" horizontalAlign="center">					
							<mx:Label text="Hasta"/>
							<mx:DateField id="dfHasta" width="120" formatString="DD/MM/YYYY" editable="true"/>
						</mx:VBox>
						
					</mx:HBox>
				</mx:FormItem>
				<mx:FormItem label="Cobrador:" >
					<mx:ComboBox id="cboCobradores" dataProvider="{modelo.listaCobradoresCambio}" labelFunction="datosCobradores" width="230"/>
				</mx:FormItem>
				<mx:HBox width="100%" horizontalAlign="right">			
					<mx:Button id="btnBuscar" label="Generar" width="120" click="buscarTareas()"/>
				</mx:HBox>
			</mx:Form>			
		</mx:VBox>
	</mx:Canvas>
	
</mx:Module>
